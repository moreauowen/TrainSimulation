# sample TrainSimulation.config
# for this lab, assume there are no errors in the configuration
#   - ok to blow up if there are
# v1.0.0 - Tu 10/17/2017 - David M Rosenberg
#   first pass
# v1.1.0 - W 10/18/2017 - David M Rosenberg
#   major clean up
# v1.1.1 - W 2/27/2019 - David M Rosenberg
#   minor cosmetic changes (line wrapping and spacing)

# general settings
ticks=20	# iterations through the simulation loop

seed=12345  # fed to the random number generator to seed the sequence
            #   - for repeatability
			# can use 0 or -1 to indicate don't seed/seed with current time,
			#    respectively
			# NOTE: You are permitted to use private static/class variables to 
			#    hold default values (e.g. trainCapacity).
			#
			#    Not applicable to single/local-use parameters (e.g. routeLength
			#        - but none of the others in this sample configuration
			#        - the rest should be local variables).


# Route
route=linear:15
            # style (linear or circular)/length
            #
            # style:
            #   linear: end-to-end/trains reverse direction at ends, staying at 
            #           the same track location
			#   circular: next location after last/first is first/last depending 
			#            upon direction
			#
			# length of the route (number of positions for stations/trains)
            #   end-to-end length of the route
            #   - in this file, valid locations are 1..length
            #   - your implementation might put them at indices 0..length-1


# Stations
stations=3, 7, 11, 14
			# 5 stations at the specified locations
			#    - instantiated in the order listed


# Trains
trains=2:in:25, 5:out:25, 8:in:25, 11:in:25, 14:out:25
			# 6 trains: at location:going in direction:with capacity
			#    - location is the position on the Route (1..length)
			#    - direction is meaningful for the Route style (linear or circular)
			#    - capacity is the maximum number of Passengers the Train can hold


# Passengers
passengers=30:50, 5:10
            # initial:per tick number of passengers to generate
            # initial: range of number of Passengers to pre-load into the 
            #           simulation (before loop)
            #
            #   specification is minimum:maximum
            #
            #   when minimum == maximum, that exact number of Passengers will 
            #       be created
            #   when minimum < maximum, a random number of Passengers will be 
            #       created between minimum and maximum, inclusive
            #
            # per tick: range of number of Passengers to add to the simulation 
            #           on each clock tick (iteration)
            #
            #   specification is minimum:maximum
            #
            #   when minimum == maximum, that exact number of Passengers will 
            #       be created
            #   when minimum < maximum, a random number of Passengers will be 
            #       created between minimum and maximum, inclusive
